*----------------------------------------------------------------------*
***INCLUDE Z_DISPLAY_HU_STATUS_0100O01.
*----------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_0100  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE user_command_0100 INPUT.

  CASE SY-UCOMM.
  WHEN 'ENTER'.
    BREAK O4USER10.


   IF FLGAVQ = 'X'.
   FLGAVQ = 'X'.
  ELSE.
    FLGAVQ = ' '.
  ENDIF.
*
*    SELECT * FROM /SCWM/HUHDR INTO TABLE lt_DATA
*    WHERE HUIDENT = HU_ID.  "AND ( FLGAVQ = 'X' OR FLGAVQ  = ' ' ).
*
*
*
*    SELECT * FROM /SCWM/HUHDR INTO TABLE lt_DATA
*    WHERE FLGAVQ = 'X' OR FLGAVQ  = ' ' .
*
*    SELECT * FROM /SCWM/HUHDR INTO TABLE lt_DATA .

*****get all teh records from HUHDR for empty HU

data lt_hu_list TYPE TABLE OF /scwm/huhdr .
**1
select * from  /scwm/huhdr INTO table @data(lt_data) up to 100 rows
   WHERE  FLGAVQ = 'X' or FLGAVQ = @space .


***select query based on entered HU List
*
*  select * from  /scwm/huhdr INTO table @data(lt_data) up to 100 rows
*    FOR ALL ENTRIES IN lt_hu_list
*
*   WHERE  huident = lt_hu_list-huident .


IF sy-subrc = 0 .

 DATA : lt_data_empty TYPE TABLE OF /scwm/huhdr ,
        lt_data_filled TYPE TABLE OF /scwm/huhdr .

 lt_data_empty =  lt_data_filled = lt_data.

 DELETE  lt_data_empty WHERE  FLGAVQ = space .
  DELETE   lt_data_filled WHERE  FLGAVQ = 'X' .

ENDIF.

  IF sy-subrc = 0 AND lt_DATA IS NOT INITIAL.

*   cl_demo_output=>display( lt_data ) .

 CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY'
  EXPORTING
*    I_INTERFACE_CHECK                 = ' '
*    I_BYPASSING_BUFFER                = ' '
*    I_BUFFER_ACTIVE                   = ' '
*    I_CALLBACK_PROGRAM                = ' '
*    I_CALLBACK_PF_STATUS_SET          = ' '
*    I_CALLBACK_USER_COMMAND           = ' '
*    I_CALLBACK_TOP_OF_PAGE            = ' '
*    I_CALLBACK_HTML_TOP_OF_PAGE       = ' '
*    I_CALLBACK_HTML_END_OF_LIST       = ' '
    I_STRUCTURE_NAME                  =  '/scwM/huhdr'
*    I_BACKGROUND_ID                   = ' '
     I_GRID_TITLE                      =  'Ruchir'
*    I_GRID_SETTINGS                   =
*    IS_LAYOUT                         =
*    IT_FIELDCAT                       =
*    IT_EXCLUDING                      =
*    IT_SPECIAL_GROUPS                 =
*    IT_SORT                           =
*    IT_FILTER                         =
*    IS_SEL_HIDE                       =
*    I_DEFAULT                         = 'X'
*    I_SAVE                            = ' '
*    IS_VARIANT                        =
*    IT_EVENTS                         =
*    IT_EVENT_EXIT                     =
*    IS_PRINT                          =
*    IS_REPREP_ID                      =
*    I_SCREEN_START_COLUMN             = 0
*    I_SCREEN_START_LINE               = 0
*    I_SCREEN_END_COLUMN               = 0
*    I_SCREEN_END_LINE                 = 0
*    I_HTML_HEIGHT_TOP                 = 0
*    I_HTML_HEIGHT_END                 = 0
*    IT_ALV_GRAPHICS                   =
*    IT_HYPERLINK                      =
*    IT_ADD_FIELDCAT                   =
*    IT_EXCEPT_QINFO                   =
*    IR_SALV_FULLSCREEN_ADAPTER        =
*    O_PREVIOUS_SRAL_HANDLER           =
*  IMPORTING
*    E_EXIT_CAUSED_BY_CALLER           =
*    ES_EXIT_CAUSED_BY_USER            =
   TABLES
     t_outtab                          = lt_data
*  EXCEPTIONS
*    PROGRAM_ERROR                     = 1
*    OTHERS                            = 2
           .
 IF sy-subrc <> 0.
* Implement suitable error handling here
 ENDIF.


*    WRITE: / 'Handling Units selected:'.
*    LOOP AT lt_DATA INTO ls_DATA.
**      LEAVE TO SCREEN 200.
*      WRITE: / ls_DATA-HUIDENT,
*               ls_DATA-LETYP,
*               ls_DATA-CHANGED_BY,
*               ls_DATA-CREATED_BY,
*               ls_DATA-G_WEIGHT,
*               ls_DATA-N_WEIGHT,
*               ls_DATA-UNIT_GW,
*               ls_DATA-T_WEIGHT,
*               ls_DATA-UNIT_TW,
*               ls_DATA-G_VOLUME,
*               ls_DATA-N_VOLUME,
*               ls_DATA-UNIT_GV,
*               ls_DATA-T_VOLUME,
*               ls_DATA-UNIT_TV,
*               ls_DATA-G_CAPA,
*               ls_DATA-N_CAPA,
*               ls_DATA-T_CAPA,
*               ls_DATA-LENGTH,
*               ls_DATA-WIDTH,
*               ls_DATA-HEIGHT,
*               ls_DATA-UNIT_LWH,
*               ls_DATA-MAX_WEIGHT,
*               ls_DATA-TOLW,
*               ls_DATA-TARE_VAR,
*               ls_DATA-MAX_VOLUME,
*               ls_DATA-TOLV,
*               ls_DATA-CLOSED_PACKAGE,
*               ls_DATA-MAX_CAPA,
*               ls_DATA-MAX_LENGTH,
*               ls_DATA-MAX_WIDTH,
*               ls_DATA-MAX_HEIGHT,
*               ls_DATA-UNIT_MAX_LWH,
*               ls_DATA-VHI,
*               ls_DATA-FLGAVQ,
*               ls_DATA-FLGMOVE,
*               ls_DATA-PROCS,
*               ls_DATA-COPST,
*               ls_DATA-PRCES,
*               ls_DATA-LOGPOS,
*               ls_DATA-LOGPOS_EXT,
*               ls_DATA-DSTGRP,
*               ls_DATA-WKLID,
*               ls_DATA-PMTYP,
*               ls_DATA-PACKGR,
*               ls_DATA-PHYSTAT,
*               ls_DATA-TOP,
*               ls_DATA-BOTTOM,
*               ls_DATA-STSMA,
*               ls_DATA-PS_LEVEL_SEQ,
*               ls_DATA-HZMT,
*               ls_DATA-MFS_STOCKTRANS_CNT,
*               ls_DATA-HU_GUID_EXT.
*    ENDLOOP.
  ELSE.
    WRITE: / 'No handling units found matching the selection criteria.'.
  ENDIF.
  WHEN 'BACK'.
    LEAVE PROGRAM.
ENDCASE.

ENDMODULE.
